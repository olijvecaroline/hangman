describe "#turn" do
  before do @anwer = "AAs" end
    it "turns player input into a downcase string of one letter" do (expect @answer).to eq("a") end
  end
end

describe "#input_check" do

  #context "when the imput is !"
    #before do @answer = ! end
      #expect(@guess

      #context "check the quess against the word and route to winner or turn" do
        it "checks the input on equality with the word" do
          (expect (guess == random_word).to eq true

          contex "succes" do
            let(true)
              it "routes to #winner" do
                (expect game.input_check).to eq(winner)
              end
          end

          context "failure" do
            let(@guess) {random_word}
              it "routes to turn" do
                expect(game.input_check).to eq(turn)
              end
              it " deducts 1 from possible attempts" do
                expect()
              end
          end
        end
      end
    end


    describe "#add_to_answers" do
      before " answer = a"
subject { [] }
it "should have the prescribed elements" do
  answer.should.contain == [a]
end
end

describe Array, "with some elements" do
subject { [] }
before { subject.push(1,2,3) }
it "should have the prescribed elements" do
  subject.should == [1,2,3]
end
end
